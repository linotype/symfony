<?xml version="1.0" encoding="UTF-8" ?>
<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services
        http://symfony.com/schema/dic/services/services-1.0.xsd">
    
    <services>
        
        <!-- Linotype: Inject Helper service -->
        <prototype namespace="Linotype\Helper\" resource="../../../../../linotype/Helper/*" public="true" autowire="true" autoconfigure="true"/>

        <!-- Linotype: Inject Services for helper -->
        <!-- <prototype namespace="Linotype\SymfonyBundle\Linotype\" resource="../../../src/Linotype/*" public="true" autowire="true" autoconfigure="true"/> -->

        <!-- Linotype: Core -->
        <service id="linotype" class="Linotype\SymfonyBundle\Core\Linotype" public="true">
            <argument type="service" id="service_container"/>
            <argument type="service" id="linotype.config"/>
        </service>
        <service alias="linotype" id="Linotype\SymfonyBundle\Core\Linotype" public="true"/>

        <!-- Linotype: Collector -->
        <service class="Linotype\SymfonyBundle\DataCollector\LinotypeCollector" id="Linotype\SymfonyBundle\DataCollector\LinotypeCollector" public="false">
            <argument type="service" id="linotype" />
            <tag name="data_collector" template="@Linotype/Collector/linotype.html.twig" id="linotype" />
        </service>

        <!-- Service: Config -->
        <service id="linotype.config" class="Linotype\SymfonyBundle\Service\LinotypeConfig" public="true">
            <argument type="service" id="service_container"/>
            <argument type="service" id="linotype.repo.meta"/>
        </service>
        <service alias="linotype.config" id="Linotype\SymfonyBundle\Service\LinotypeConfig" public="false"/>

        <!-- Service: Loader -->
        <service id="linotype.loader" class="Linotype\SymfonyBundle\Service\LinotypeLoader" public="true">
            <argument type="service" id="service_container"/>
            <argument type="service" id="twig"/>
            <argument type="service" id="linotype.config"/>
        </service>
        <service alias="linotype.loader" id="Linotype\SymfonyBundle\Service\LinotypeLoader" public="false"/>
        
        <!-- Service: LinotypeMetaRepository -->
        <service id="linotype.repo.meta" class="Linotype\SymfonyBundle\Repository\LinotypeMetaRepository" public="true">
            <argument type="service" id="Doctrine\Common\Persistence\ManagerRegistry"/>
        </service>
        <service alias="linotype.repo.meta" id="Linotype\SymfonyBundle\Repository\LinotypeMetaRepository" public="false"/>

        <!-- Service: LinotypeOptionRepository -->
        <service id="linotype.repo.option" class="Linotype\SymfonyBundle\Repository\LinotypeOptionRepository" public="true">
            <argument type="service" id="Doctrine\Common\Persistence\ManagerRegistry"/>
        </service>
        <service alias="linotype.repo.option" id="Linotype\SymfonyBundle\Repository\LinotypeOptionRepository" public="false"/>

        <!-- Service: LinotypeTemplateRepository -->
        <service id="linotype.repo.template" class="Linotype\SymfonyBundle\Repository\LinotypeTemplateRepository" public="true">
            <argument type="service" id="Doctrine\Common\Persistence\ManagerRegistry"/>
        </service>
        <service alias="linotype.repo.template" id="Linotype\SymfonyBundle\Repository\LinotypeTemplateRepository" public="false"/>

        <!-- Service: LinotypeMetaRepository -->
        <service id="linotype.repo.meta" class="Linotype\SymfonyBundle\Repository\LinotypeMetaRepository" public="true">
            <argument type="service" id="Doctrine\Common\Persistence\ManagerRegistry"/>
        </service>
        <service alias="linotype.repo.meta" id="Linotype\SymfonyBundle\Repository\LinotypeMetaRepository" public="false"/>

        <!-- Service: Test -->
        <service id="linotype.my_service" class="Linotype\SymfonyBundle\Service\MyService" public="true"/>
        <service alias="linotype.my_service" id="Linotype\SymfonyBundle\Service\MyService" public="false"/>

        <!-- Service: Twig -->
        <service id="linotype.twig" class="Linotype\SymfonyBundle\Twig\LinotypeTwig" public="true">
            <argument type="service" id="service_container"/>
            <argument type="service" id="twig"/>
            <argument type="service" id="linotype"/>
            <argument type="service" id="linotype.repo.meta"/>
            <tag name="twig.extension" />
        </service>
        <service alias="linotype.twig" id="Linotype\SymfonyBundle\Twig\LinotypeTwig" public="false"/>

        <!-- Controller: linotype -->
        <service id="linotype.controller" class="Linotype\SymfonyBundle\Controller\LinotypeController" public="true">
            <call method="setContainer">
                <argument type="service" id="Psr\Container\ContainerInterface"/>
            </call>
            <tag name="container.service_subscriber"/>
            <tag name="controller.service_arguments"/>
            <argument type="service" id="linotype.loader"/>
        </service>
        <service alias="linotype.controller" id="Linotype\SymfonyBundle\Controller\LinotypeController" public="true"/>

        <!-- Controller: admin -->
        <service id="linotype.controller.admin" class="Linotype\SymfonyBundle\Controller\LinotypeAdminController" public="true">
            <call method="setContainer">
                <argument type="service" id="Psr\Container\ContainerInterface"/>
            </call>
            <tag name="container.service_subscriber"/>
            <tag name="controller.service_arguments"/>
            <argument type="service" id="linotype.loader"/>
        </service>
        <service alias="linotype.controller.admin" id="Linotype\SymfonyBundle\Controller\LinotypeAdminController" public="true"/>

        <!-- Controller: admin block -->
        <service id="linotype.controller.admin.block" class="Linotype\SymfonyBundle\Controller\LinotypeAdminBlockController" public="true">
            <call method="setContainer">
                <argument type="service" id="Psr\Container\ContainerInterface"/>
            </call>
            <tag name="container.service_subscriber"/>
            <tag name="controller.service_arguments"/>
            <argument type="service" id="linotype.loader"/>
        </service>
        <service alias="linotype.controller.admin.block" id="Linotype\SymfonyBundle\Controller\LinotypeAdminBlockController" public="true"/>

        <!-- Controller: helper -->
        <service id="linotype.controller.helper" class="Linotype\SymfonyBundle\Controller\LinotypeHelperController" public="true">
            <call method="setContainer">
                <argument type="service" id="Psr\Container\ContainerInterface"/>
            </call>
            <tag name="container.service_subscriber"/>
            <tag name="controller.service_arguments"/>
            <argument type="service" id="linotype.loader"/>
        </service>
        <service alias="linotype.controller.helper" id="Linotype\SymfonyBundle\Controller\LinotypeHelperController" public="true"/>

        <!-- Routing -->
        <service id="Linotype\SymfonyBundle\Routing\ExtraLoader" public="true">
            <argument type="service" id="linotype" />
            <tag name="routing.loader"/>
        </service>

    </services>
</container>